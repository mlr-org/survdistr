% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interp_funs.R
\name{vec_interp}
\alias{vec_interp}
\title{Interpolate a Survival / CDF / CIF Vector}
\usage{
vec_interp(
  x,
  times = NULL,
  eval_times = NULL,
  constant = TRUE,
  type = "surv",
  add_times = TRUE,
  check = TRUE
)
}
\arguments{
\item{x}{(\code{numeric()})\cr
Survival/CDF/CIF vector at given time points.
Optionally named with the corresponding times.}

\item{times}{(\code{numeric()}|\code{NULL})\cr
Original time points corresponding to \code{x}.
If \code{NULL}, extracted from \code{names(x)}.}

\item{eval_times}{(\code{numeric()}|\code{NULL})\cr
New time points at which to interpolate.
Values do not need to be sorted or unique, just non-negative.
If \code{NULL}, \code{x} is returned unchanged.}

\item{constant}{(\code{logical(1)})\cr
If \code{TRUE}, use piecewise-constant (left-continuous) interpolation.
If \code{FALSE}, use piecewise-linear interpolation.}

\item{type}{(\code{character(1)})\cr
One of \code{"surv"}, \code{"cdf"}, or \code{"cif"}, indicating the data type of the input vector.}

\item{add_times}{(\code{logical(1)})\cr
If \code{TRUE}, column names are set to the relevant time points.}

\item{check}{(\code{logical(1)})\cr
If \code{TRUE}, perform simple validation (range, monotonicity, and bounds).
Set to \code{FALSE} to skip checks (NOT recommended for external use).}
}
\value{
A numeric vector of length \code{length(eval_times)} with interpolated values.
}
\description{
Lightweight wrapper for the Rcpp function \code{c_mat_interp()} that handles a single
survival, cumulative distribution (CDF), or cumulative incidence (CIF) vector.
}
\examples{
surv_vec = c(1, 0.8, 0.6)
names(surv_vec) = c(0, 10, 20)
eval_times = c(5, 15, 25)
vec_interp(surv_vec, eval_times = eval_times, type = "surv")
}
